{"version":3,"sources":["color.js","App.js"],"names":["theme","App","useState","working","setWorking","text","setText","toDos","setToDos","progress","setProgress","keyArray","Object","keys","saveToDos","toSave","a","async","AsyncStorage","setItem","JSON","stringify","console","log","Alert","alert","saveTab","tab","changeToDo","id","toDo","done","newToDo","newToDos","useEffect","getItem","parse","loadToDos","loadTab","totalToDos","filter","key","length","totalDone","View","style","styles","container","StatusBar","header","marginBottom","color","width","animationType","borderWidth","flexDirection","justifyContent","TouchableOpacity","onPress","Text","fontSize","fontWeight","TextInput","textAlign","onSubmitEditing","Date","now","onChangeText","payload","input","value","placeholder","keyboardAppearance","returnKeyType","maxLength","loadingView","ActivityIndicator","loadingCircle","size","ScrollView","map","padding","doneToDo","Feather","name","editToDo","textDecorationLine","editable","Platform","OS","confirm","deleteToDo","StyleSheet","create","flex","backgroundColor","paddingHorizontal","marginTop","paddingVertical","marginVertical","borderRadius","alignItems"],"mappings":"4QAAaA,EACR,OADQA,EAEL,OAFKA,EAGN,UAHMA,EAIJ,U,0lBCkBM,SAASC,IACvB,MAA8BC,oBAAS,GAAvC,WAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,WAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,WAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCN,qBAAhC,WAAOO,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,OAAOC,KAAKN,GAUvBO,EAAY,SAAOC,GAAP,SAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEVE,IAAaC,QApBG,SAsBrBC,KAAKC,UAAUN,KAJA,sDAOhBO,QAAQC,IAAR,MACAC,IAAMC,MAAN,MARgB,gEAWZC,EAAU,SAAOC,GAAP,SAAAX,EAAAC,OAAA,2EAAAD,EAAA,MAERE,IAAaC,QA9BE,OA8BuBC,KAAKC,UAAUM,KAF7C,sDAIdL,QAAQC,IAAR,MACAC,IAAMC,MAAN,MALc,gEA8EVG,EAAa,SAAOC,EAAIxB,GAAX,mBAAAW,EAAAC,OAAA,uDACZa,EAAOvB,EAAMsB,IACEE,KAAfC,EAAU,OAAiBF,GAAjB,IAAuBzB,SACjC4B,EAHY,OAGI1B,GAHJ,UAGYsB,EAAKG,IACnCxB,EAASyB,GAJS,WAAAjB,EAAA,MAKZF,EAAUmB,IALE,6DA8BnB,OAvBAC,qBAAU,YA7EQ,mBAAAlB,EAAAC,OAAA,2EAAAD,EAAA,MAEIE,IAAaiB,QAvCX,WAqCN,QAEV5B,EAFU,SAIfC,EAASY,KAAKgB,MAAM7B,IAJL,gDAOhBe,QAAQC,IAAR,MACAC,IAAMC,MAAN,MARgB,gEA8EjBY,GAnEe,mBAAArB,EAAAC,OAAA,2EAAAD,EAAA,MAEIE,IAAaiB,QAjDV,SA+CP,QAERR,EAFQ,SAIbvB,EAAWgB,KAAKgB,MAAMT,IAJT,gDAOdL,QAAQC,IAAR,MACAC,IAAMC,MAAN,MARc,gEAoEfa,KACE,IACHJ,qBAAU,WACT,GAAI/B,EAAS,CACZ,IAAMoC,EAAa5B,EAAS6B,QAC3B,SAACC,GAAD,OAASlC,EAAMkC,GAAKtC,WACnBuC,OACIC,EAAYhC,EAAS6B,QAC1B,SAACC,GAAD,OAASlC,EAAMkC,GAAKtC,SAAWI,EAAMkC,GAAKV,QACzCW,OACFhC,EAA2B,IAAf6B,EAAmB,EAAII,EAAYJ,OACzC,CACN,IAAMA,EAAa5B,EAAS6B,QAC3B,SAACC,GAAD,OAAUlC,EAAMkC,GAAKtC,WACpBuC,OACIC,EAAYhC,EAAS6B,QAC1B,SAACC,GAAD,OAAUlC,EAAMkC,GAAKtC,SAAWI,EAAMkC,GAAKV,QAC1CW,OACFhC,EAA2B,IAAf6B,EAAmB,EAAII,EAAYJ,MAE9C,CAACpC,EAASI,IAEZ,eAACqC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,UAApB,UACC,cAACC,EAAA,EAAD,CAAWH,MAAM,UACjB,eAACD,EAAA,EAAD,CAAMC,MAAOC,EAAOG,OAApB,UACC,cAAC,IAAD,CACCJ,MAAO,CAAEK,aAAc,IACvBC,MAAOnD,EACPS,SAAUA,EACV2C,MAAO,KACPC,cAAc,SACdC,YAAa,IAEd,eAACV,EAAA,EAAD,CACCC,MAAO,CACNU,cAAe,MACfC,eAAgB,iBAHlB,UAMC,cAACC,EAAA,EAAD,CAAkBC,QA9IT,oBAAA1C,EAAAC,OAAA,uDACZb,GAAW,GADC,WAAAY,EAAA,MAENU,GAAQ,IAFF,6DA8IT,SACC,cAACiC,EAAA,EAAD,CACCd,MAAO,CACNe,SAAU,GACVC,WAAY,MACZV,MAAOnD,EACPmD,MAAOhD,EAAUH,EAAcA,GALjC,oBAWD,cAACyD,EAAA,EAAD,CAAkBC,QA9JP,oBAAA1C,EAAAC,OAAA,uDACdb,GAAW,GADG,WAAAY,EAAA,MAERU,GAAQ,IAFA,6DA8JX,SACC,cAACiC,EAAA,EAAD,CACCd,MAAO,CACNe,SAAU,GACVC,WAAY,MACZV,MAAOnD,EACPmD,MAAOhD,EAAUH,EAAaA,GALhC,4BAaH,cAAC8D,EAAA,EAAD,CACCC,UAAU,SACVC,gBA3Ha,0BAAAhD,EAAAC,OAAA,mDACF,KAATZ,EADW,wDAIT4B,EAJS,SAKbgC,KAAKC,MAAQ,CAAE7D,OAAMF,UAAS4B,MAAM,IAClCxB,GAEJC,EAASyB,GARM,WAAAjB,EAAA,MASTF,EAAUmB,IATD,OAUf3B,EAAQ,IAVO,6DA4Hb6D,aAvKkB,SAACC,GAAD,OAAa9D,EAAQ8D,IAwKvCvB,MAAOC,EAAOuB,MACdC,MAAOjE,EACPkE,YACCpE,EAAU,cAAgB,0BAE3BqE,mBAAmB,OACnBC,cAAc,OACdC,UAAW,KAEXnE,IAAU,GACV,cAACqC,EAAA,EAAD,CAAMC,MAAOC,EAAO6B,YAApB,SACC,cAACC,EAAA,EAAD,CACCzB,MAAOnD,EACP6C,MAAOC,EAAO+B,cACdC,KAAK,YAIP,cAACC,EAAA,EAAD,UACEpE,EAASqE,KACT,SACCvC,GADD,OAGClC,EAAMkC,GAAKtC,UAAYA,EACtB,eAACyC,EAAA,EAAD,CAAMC,MAAOC,EAAOhB,KAApB,UACC,cAAC2B,EAAA,EAAD,CACCZ,MAAO,CAAEoC,QAAS,GAClBvB,QAAS,kBAlHD,SAAO7B,GAAP,mBAAAb,EAAAC,OAAA,uDACVa,EAAOvB,EAAMsB,GACbG,EAAUF,EAAKC,KAAL,OACRD,GADQ,IACFC,MAAM,IADJ,OAERD,GAFQ,IAEFC,MAAM,IACdE,EALU,OAKM1B,GALN,UAKcsB,EAAKG,IACnCxB,EAASyB,GANO,WAAAjB,EAAA,MAOVF,EAAUmB,IAPA,4DAkHOiD,CAASzC,IAFzB,SAIElC,EAAMkC,GAAKV,KACX,cAACoD,EAAA,EAAD,CACCC,KAAK,eACLN,KAAM,GACN3B,MAAOnD,IAGR,cAACmF,EAAA,EAAD,CACCC,KAAK,SACLN,KAAM,GACN3B,MAAOnD,MAIV,cAAC8D,EAAA,EAAD,CACCjB,MAAK,OACDC,EAAOuC,UADN,IAEJjC,MAAO,IACPkC,mBAAoB/E,EAAMkC,GAAKV,KAC5B,eACA,OACHoB,MAAO5C,EAAMkC,GAAKV,KACf/B,EACAA,EACH+D,UAAW,WAEZwB,UACChF,EAAMkC,GAAKV,KAEZoC,aAAc,WAER,IADL9D,EACI,uDADGE,EAAMkC,GAAKpC,KAEbE,EAAMkC,GAAKV,MACfH,EAAWa,EAAKpC,IAElBiE,MAAO/D,EAAMkC,GAAKpC,KAClBmE,mBAAmB,OACnBC,cAAc,OACdF,YAAY,MACZG,UAAW,KAEZ,cAACjB,EAAA,EAAD,CACCC,QAAS,kBAvLC,SAAO7B,GAAP,eAAAb,EAAAC,OAAA,mDACE,QAAhBuE,IAASC,GADK,qBAENC,QAAQ,qCAFF,8BAIVzD,EAJU,KAIM1B,IACNsB,GAChBrB,EAASyB,GANO,WAAAjB,EAAA,MAOVF,EAAUmB,IAPA,+BAUjBT,IAAMC,MAAM,gBAAiB,gBAAiB,CAC7C,CAAEpB,KAAM,UACR,CACCA,KAAM,WACNwC,MAAO,cACPa,QAAS,0BAAA1C,EAAAC,OAAA,8DACFgB,EADE,KACc1B,IACNsB,GAChBrB,EAASyB,GAHD,WAAAjB,EAAA,MAIFF,EAAUmB,IAJR,gEAfM,6DAuLK0D,CAAWlD,IAD3B,SAGC,cAAC0C,EAAA,EAAD,CACCC,KAAK,UACLN,KAAM,GACN3B,MAAOnD,QApDqByC,GAwD5B,aAQX,IAAMK,EAAS8C,IAAWC,OAAO,CAChC9C,UAAW,CACV+C,KAAM,EACNC,gBAAiB/F,EACjBgG,kBAAmB,IAEpB/C,OAAQ,CACPgD,UAAW,KAEZ5B,MAAO,CACN0B,gBAAiB/F,EACjBkG,gBAAiB,GACjBF,kBAAmB,GACnBG,eAAgB,GAChBC,aAAc,GACdH,UAAW,GACXrC,SAAU,GACVG,UAAW,UAEZjC,KAAM,CACLyB,cAAe,MACf8C,WAAY,SACZ7C,eAAgB,gBAChBuC,gBAAiB/F,EACjBkD,aAAc,GACdgD,gBAAiB,GACjBF,kBAAmB,GACnBI,aAAc,IAGfzB,YAAa,CACZmB,KAAM,EACNtC,eAAgB,SAChB6C,WAAY,UAEbxB,cAAe,CAAEoB,WAAY,KAC7BZ,SAAU,CACTlC,MAAOnD,EACP4D,SAAU,O","file":"static/js/app.a3ad5639.chunk.js","sourcesContent":["export const theme = {\n\tbg: \"#000\",\n\twhite: \"#fff\",\n\tgrey: \"#3A3D40\",\n\ttoDoBg: \"#5C5C60\",\n};\n","import { useState, useEffect } from \"react\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n\tStyleSheet,\n\tText,\n\tView,\n\tTouchableOpacity,\n\tTextInput,\n\tScrollView,\n\tActivityIndicator,\n\tAlert,\n\tPlatform,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { theme } from \"./color\";\nimport { Feather } from \"@expo/vector-icons\";\nimport * as Progress from \"react-native-progress\";\n\nconst STORAGE_TODO_KEY = \"@toDos\";\nconst STORAGE_TAB_KEY = \"@tab\";\n\nexport default function App() {\n\tconst [working, setWorking] = useState(true);\n\tconst [text, setText] = useState(\"\");\n\tconst [toDos, setToDos] = useState({});\n\tconst [progress, setProgress] = useState();\n\tconst keyArray = Object.keys(toDos);\n\tconst travel = async () => {\n\t\tsetWorking(false);\n\t\tawait saveTab(false);\n\t};\n\tconst work = async () => {\n\t\tsetWorking(true);\n\t\tawait saveTab(true);\n\t};\n\tconst onChangeText = (payload) => setText(payload);\n\tconst saveToDos = async (toSave) => {\n\t\ttry {\n\t\t\tawait AsyncStorage.setItem(\n\t\t\t\tSTORAGE_TODO_KEY,\n\t\t\t\tJSON.stringify(toSave)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t\tAlert.alert(e);\n\t\t}\n\t};\n\tconst saveTab = async (tab) => {\n\t\ttry {\n\t\t\tawait AsyncStorage.setItem(STORAGE_TAB_KEY, JSON.stringify(tab));\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t\tAlert.alert(e);\n\t\t}\n\t};\n\tconst loadToDos = async () => {\n\t\ttry {\n\t\t\tconst toDos = await AsyncStorage.getItem(STORAGE_TODO_KEY);\n\t\t\tif (toDos) {\n\t\t\t\tsetToDos(JSON.parse(toDos));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t\tAlert.alert(e);\n\t\t}\n\t};\n\tconst loadTab = async () => {\n\t\ttry {\n\t\t\tconst tab = await AsyncStorage.getItem(STORAGE_TAB_KEY);\n\t\t\tif (tab) {\n\t\t\t\tsetWorking(JSON.parse(tab));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t\tAlert.alert(e);\n\t\t}\n\t};\n\n\tconst addToDo = async () => {\n\t\tif (text === \"\") {\n\t\t\treturn;\n\t\t}\n\t\tconst newToDos = {\n\t\t\t[Date.now()]: { text, working, done: false },\n\t\t\t...toDos,\n\t\t};\n\t\tsetToDos(newToDos);\n\t\tawait saveToDos(newToDos);\n\t\tsetText(\"\");\n\t};\n\n\tconst deleteToDo = async (id) => {\n\t\tif (Platform.OS === \"web\") {\n\t\t\tconst ok = confirm(\"Do you want to delete this To Do?\");\n\t\t\tif (ok) {\n\t\t\t\tconst newToDos = { ...toDos };\n\t\t\t\tdelete newToDos[id];\n\t\t\t\tsetToDos(newToDos);\n\t\t\t\tawait saveToDos(newToDos);\n\t\t\t}\n\t\t} else {\n\t\t\tAlert.alert(\"Delete To Do?\", \"Are you sure?\", [\n\t\t\t\t{ text: \"Cancel\" },\n\t\t\t\t{\n\t\t\t\t\ttext: \"I'm sure\",\n\t\t\t\t\tstyle: \"destructive\",\n\t\t\t\t\tonPress: async () => {\n\t\t\t\t\t\tconst newToDos = { ...toDos };\n\t\t\t\t\t\tdelete newToDos[id]; // state 에 저장하기 전에 mutate 한다.\n\t\t\t\t\t\tsetToDos(newToDos);\n\t\t\t\t\t\tawait saveToDos(newToDos);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\t};\n\tconst doneToDo = async (id) => {\n\t\tconst toDo = toDos[id];\n\t\tconst newToDo = toDo.done\n\t\t\t? { ...toDo, done: false }\n\t\t\t: { ...toDo, done: true };\n\t\tconst newToDos = { ...toDos, [id]: newToDo };\n\t\tsetToDos(newToDos);\n\t\tawait saveToDos(newToDos);\n\t};\n\tconst changeToDo = async (id, text) => {\n\t\tconst toDo = toDos[id];\n\t\tconst newToDo = toDo.done ? { ...toDo, text } : { ...toDo, text };\n\t\tconst newToDos = { ...toDos, [id]: newToDo };\n\t\tsetToDos(newToDos);\n\t\tawait saveToDos(newToDos);\n\t};\n\tuseEffect(() => {\n\t\tloadToDos();\n\t\tloadTab();\n\t}, []);\n\tuseEffect(() => {\n\t\tif (working) {\n\t\t\tconst totalToDos = keyArray.filter(\n\t\t\t\t(key) => toDos[key].working\n\t\t\t).length;\n\t\t\tconst totalDone = keyArray.filter(\n\t\t\t\t(key) => toDos[key].working && toDos[key].done\n\t\t\t).length;\n\t\t\tsetProgress(totalToDos === 0 ? 0 : totalDone / totalToDos);\n\t\t} else {\n\t\t\tconst totalToDos = keyArray.filter(\n\t\t\t\t(key) => !toDos[key].working\n\t\t\t).length;\n\t\t\tconst totalDone = keyArray.filter(\n\t\t\t\t(key) => !toDos[key].working && toDos[key].done\n\t\t\t).length;\n\t\t\tsetProgress(totalToDos === 0 ? 0 : totalDone / totalToDos);\n\t\t}\n\t}, [working, toDos]);\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<StatusBar style=\"light\" />\n\t\t\t<View style={styles.header}>\n\t\t\t\t<Progress.Bar\n\t\t\t\t\tstyle={{ marginBottom: 20 }}\n\t\t\t\t\tcolor={theme.white}\n\t\t\t\t\tprogress={progress}\n\t\t\t\t\twidth={null}\n\t\t\t\t\tanimationType=\"spring\"\n\t\t\t\t\tborderWidth={0}\n\t\t\t\t/>\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<TouchableOpacity onPress={work}>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: 38,\n\t\t\t\t\t\t\t\tfontWeight: \"600\",\n\t\t\t\t\t\t\t\tcolor: theme.white,\n\t\t\t\t\t\t\t\tcolor: working ? theme.white : theme.grey,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tWork\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t<TouchableOpacity onPress={travel}>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: 38,\n\t\t\t\t\t\t\t\tfontWeight: \"600\",\n\t\t\t\t\t\t\t\tcolor: theme.white,\n\t\t\t\t\t\t\t\tcolor: working ? theme.grey : theme.white,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTravel\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<TextInput\n\t\t\t\ttextAlign=\"center\"\n\t\t\t\tonSubmitEditing={addToDo}\n\t\t\t\tonChangeText={onChangeText}\n\t\t\t\tstyle={styles.input}\n\t\t\t\tvalue={text}\n\t\t\t\tplaceholder={\n\t\t\t\t\tworking ? \"Add a To Do\" : \"Where Do you wanna Go ?\"\n\t\t\t\t}\n\t\t\t\tkeyboardAppearance=\"dark\"\n\t\t\t\treturnKeyType=\"done\"\n\t\t\t\tmaxLength={20}\n\t\t\t/>\n\t\t\t{toDos === {} ? ( // if toDos empty loading {} ? null ?\n\t\t\t\t<View style={styles.loadingView}>\n\t\t\t\t\t<ActivityIndicator\n\t\t\t\t\t\tcolor={theme.white}\n\t\t\t\t\t\tstyle={styles.loadingCircle}\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t) : (\n\t\t\t\t<ScrollView>\n\t\t\t\t\t{keyArray.map(\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tkey // Object.keys 는 hashmap의 key 만 모아 배열로 반환해준다.\n\t\t\t\t\t\t) =>\n\t\t\t\t\t\t\ttoDos[key].working === working ? ( // Work / Travle 탭을 true/false 로 구분\n\t\t\t\t\t\t\t\t<View style={styles.toDo} key={key}>\n\t\t\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\t\t\tstyle={{ padding: 1 }}\n\t\t\t\t\t\t\t\t\t\tonPress={() => doneToDo(key)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{toDos[key].done ? (\n\t\t\t\t\t\t\t\t\t\t\t<Feather\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"check-square\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize={25}\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={theme.grey}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Feather\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"square\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize={25}\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={theme.white}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t...styles.editToDo,\n\t\t\t\t\t\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\t\t\t\t\t\ttextDecorationLine: toDos[key].done\n\t\t\t\t\t\t\t\t\t\t\t\t? \"line-through\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"none\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: toDos[key].done\n\t\t\t\t\t\t\t\t\t\t\t\t? theme.grey\n\t\t\t\t\t\t\t\t\t\t\t\t: theme.white,\n\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\teditable={\n\t\t\t\t\t\t\t\t\t\t\ttoDos[key].done ? false : true\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonChangeText={(\n\t\t\t\t\t\t\t\t\t\t\ttext = toDos[key].text\n\t\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\t\tif (!toDos[key].done)\n\t\t\t\t\t\t\t\t\t\t\t\tchangeToDo(key, text);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvalue={toDos[key].text}\n\t\t\t\t\t\t\t\t\t\tkeyboardAppearance=\"dark\"\n\t\t\t\t\t\t\t\t\t\treturnKeyType=\"done\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"   \"\n\t\t\t\t\t\t\t\t\t\tmaxLength={20}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\t\t\tonPress={() => deleteToDo(key)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Feather\n\t\t\t\t\t\t\t\t\t\t\tname=\"trash-2\"\n\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\tcolor={theme.grey}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t)}\n\t\t\t\t</ScrollView>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: theme.bg,\n\t\tpaddingHorizontal: 20,\n\t},\n\theader: {\n\t\tmarginTop: 100,\n\t},\n\tinput: {\n\t\tbackgroundColor: theme.white,\n\t\tpaddingVertical: 15,\n\t\tpaddingHorizontal: 20,\n\t\tmarginVertical: 20,\n\t\tborderRadius: 30,\n\t\tmarginTop: 20,\n\t\tfontSize: 18,\n\t\ttextAlign: \"center\",\n\t},\n\ttoDo: {\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"space-between\",\n\t\tbackgroundColor: theme.toDoBg,\n\t\tmarginBottom: 10,\n\t\tpaddingVertical: 12,\n\t\tpaddingHorizontal: 20,\n\t\tborderRadius: 15,\n\t},\n\n\tloadingView: {\n\t\tflex: 1,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t},\n\tloadingCircle: { marginTop: -150 },\n\teditToDo: {\n\t\tcolor: theme.white,\n\t\tfontSize: 16,\n\t},\n});\n"],"sourceRoot":""}